# here is where the magic starts

# a simple, one-shot event
just("simple", pluck_(g4, dur=80)) >> snd1

# switch off all generators
silence()

# loop an event
loop("simple_loop", pluck_(1050, dur=240, cutoff=1000), 256) >> snd1

# loop multiple events event
loop("simple_loop_2", pluck_(f3, dur=240, cutoff=1000), 256,
		      pluck_(a4, dur=240, cutoff=1000), 256) >> snd1

# loop some chords
loop("plucky_chord_loop",
	chord(
            pluck_(a4, gain=0.1, rev=0.1, pan=0.5, cutoff=8000),	   
            pluck_(c4, gain=0.1, rev=0.0, pan=0.5, cutoff=8000)
	), 512, 
	chord(
	    pluck_(e4, gain=0.1, rev=0.0, cutoff=9000), 
	    pluck_(a3, gain=0.1, rev=0.0, cutoff=9000)
	), 512
) >> snd1

# now map some modifiers .. here: multiply event duration by factor 0.4
loop("simplebass",
	sqr_(c2, dur=500, gain=0.3, cutoff=c5, rev=0.3), 512	
) \
>> map(mul("dur", 0.4), none()) \
>> snd2


# randomly choose some modifiers and sweep cutoff param 
loop("square_bass", sqr_(g2, dur=250, a=100, gain=0.4, cutoff=1200), 256) \
>> chance_map(
   (20, mute(), none()), 
   (15, add("pitch", -6), none()), 
   (20, add("pitch", 16), add("dur", 256))
   ) \
>> map(sinestretch("cutoff", 100, 300, 3000), none()) >> snd1

# make a beat ! 
loop("beat", sample_("bd","2", speed=0.9, gain=1.0), 512,
	     sample_("sn","3", speed=1.2, gain=1.0), 512)\
>> map(sinestretch("cutoff", 20, 1000, 4000), none()) >> snd3

# in case you're aout of sync, use this to re-sync! 2nd argument will wait for 1st
"beat" |sync| "square_bass"

# you can either use pitch names or frequencys
loop("freq_loop",
	sine_(500, rev=0.6, pan=0.0), 512,
	sine_(600, pan=0.0), 512,
	sine_(700, pan=1.0), 512
) >> snd6

"beat" |sync| "freq_loop"

# replace '>>' by '|' to silence single object
loop("plucky",
	pluck_(a4, rev=0.6, pan=0.0), 112,
	pluck_(c4, rev=0.6, pan=0.0), 113,
	pluck_(e4, rev=0.6, pan=0.0), 450,
	pluck_(f5, rev=0.6, pan=0.0), 112,
	pluck_(a5, rev=0.6, pan=0.0), 113,
	pluck_(c5, rev=0.6, pan=0.0), 450
) | snd5

silence()

# choose a random event and transition
rand("plucky",
	pluck_(a4, rev=0.6, pan=0.0), 112,
	pluck_(c4, rev=0.6, pan=0.0), 113,
	pluck_(e4, rev=0.6, pan=0.0), 450,
	pluck_(f5, rev=0.6, pan=0.0), 112,
	pluck_(a5, rev=0.6, pan=0.0), 113,
	pluck_(c5, rev=0.6, pan=0.0), 450
) >> snd5

# choose a random event and transition
chance("plucky_chance", 
	(30, pluck_(a4, rev=0.1, pan=0.0), 256),
	(30, pluck_(d5, pan=0.0), 512),
	(30, pluck_(a6, pan=-1.0), 512),
	default=(silent_event(), 256)
) >> snd5


ga = graph()

ga.update(
    node(1, sample_("sn", "3", gain=1.8, speed=0.7, pan=0.0, cutoff=5000, rev=0.1)),
    edge(1,2, dur=1024, prob=50),
    edge(1,3, dur=1024, prob=50),
    node(2, sample_("bd", "3", gain=1.8, speed=0.7, pan=0.0, cutoff=5000, rev=0.1)),
    edge(2,3, dur=1024),
    node(3, sample_("sn", "3", gain=1.8, speed=0.7, pan=0.0, cutoff=5000, rev=0.1)),	
    edge(3,1,dur=1024)
)


# below this point you'll find ideas that aren't implemented yet ... 
 >> chance_map(
	none(),
	(20, pitch_mod(1)),
	(20, pitch_mod(-1))
) >> snd1

just("simple",
	sine_(f3, dur=64), 128 
) >> poisson_map(lambda = 20,
     		 cycle = 20, 
		 add("pitch", 1),
		 wrap(add("pitch", 1), 0.0, 1.0)
) >> snd1 

just("simple",
	sine_(f3, dur=64), 128 
) >> loop_map(add("pitch", 1),
	      add("gain", 12)
	    )
) >> snd1 


just("simple",
	sine_(f3, dur=64), 128 
) >> count_map(10, add("pitch", 2)) >> snd1 

just("simple",
	sine_(f3, dur=64), 128 
)

